{"version":3,"sources":["common/enum.ts","common/constants.ts","pages/edit/AnchorSpan.tsx","common/logger.ts","pages/edit/edit.hooks.ts","pages/edit/edit.context.ts","common/CardModal.tsx","pages/edit/ErrorModal.tsx","pages/edit/TextEdit.tsx","common/Loadable.tsx","common/AudioControls.tsx","pages/edit/RegionElementAnnotation.tsx","pages/edit/AudioEdit.tsx","common/utils.ts","pages/UploadAudioModal.tsx","common/FullPage.tsx","common/common.types.ts","pages/edit/EditPage.tsx","intime/timelineManager.ts","intime/Timeline.tsx","pages/view/AnimatedReader.tsx","pages/view/ViewPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["EntityType","Color","Route","ReaderEventType","Key","KeybindEvent","type","LogConfig","useAnchorModifiers","setEditorState","canSetAnchors","setError","onAddAnchor","onRemoveAnchor","React","useState","anchors","setAnchors","lastAnchorId","setLastAnchorId","getAllAnchors","editorState","contentState","getCurrentContent","entityMap","convertToRaw","Object","values","filter","entity","ANCHOR","map","data","id","placeAnchor","anchorId","contentStateWithEntity","createEntity","entityKey","getLastCreatedEntityKey","initSelectionState","getSelection","getStartOffset","getEndOffset","newAnchor","contentStateWithAnchor","Modifier","insertText","undefined","newEditorState","EditorState","push","checkForDeletedAnchors","oldState","newState","oldAnchors","newAnchors","length","oldAnchor","includes","AnchorContext","createContext","decorator","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","char","getEntity","getType","component","props","getData","useContext","findIndex","anchor","key","className","CardModal","visible","onClick","onClose","title","aria-label","children","notifyOnly","submitDisabled","onSubmit","disabled","ErrorModal","message","keyBindingFn","e","keyCode","PERIOD","KeyBindingUtil","isCtrlKeyCommand","INSERT_ANCHOR","getDefaultKeyBinding","TextEdit","forwardRef","ref","createWithContent","ContentState","createFromText","error","useImperativeHandle","getContentState","Provider","value","onChange","handleKeyCommand","command","Loadable","isLoading","icon","pulse","size","opacity","style","display","AudioControls","onPlayPause","isPlaying","RegionElementAnnotation","AudioEdit","isLoaded","setIsLoaded","setIsPlaying","surfer","useRef","useEffect","ws","WaveSurfer","create","container","waveColor","PRIMARY","progressColor","TURQUOISE","cursorColor","GRAY","barWidth","barRadius","cursorWidth","height","barGap","plugins","RegionsPlugin","loadBlob","audio","on","zoom","onError","evRegion","regionElement","document","querySelectorAll","ReactDOM","render","current","addAnchor","playhead","getCurrentTime","addRegion","drag","resize","start","end","color","removeAnchor","region","remove","playPause","getTransitionLength","event","SPAN_WILL_ENTER","BLOCK_WILL_LEAVE","BLOCK_ENTER","SPAN_ENTER","BLOCK_LEAVE","getWordCount","text","split","PUNC","splitParagraph","blockId","spans","punc","tempSpans","forEach","span","s","trim","sIdx","arr","endsWith","spanIdx","UploadAudioModal","audioFile","setAudioFile","name","file","target","files","moment","lastModified","format","numBytes","rawCount","prefix","MEGABYTE","KILOBYTE","Number","toFixed","formatByteDisplay","FullPage","header","ReaderDataLogConfig","AnimatedReaderLogConfig","TimelineLogConfig","TimelineManagerLogConfig","SUPPRESS","ReaderData","AnimatedReader","Timeline","TimelineManager","createLogger","module","noop","logFn","nativeFn","deepCopy","scope","d","JSON","parse","stringify","suppressed","log","console","logNoCopy","LOG","logger","blocks","events","assembleEvents","LC","AssembleEvents","defaultSpanEnterLen","defaultBlockLeaveLen","currentTime","index","_pushEvent","duration","state","block","firstSpan","startDelay","READER_START","nextSpanWithStart","getNextSpanWithStart","transitionTimes","getTransitionTimes","blockIdx","blockOpacity","set","spanTime","getSpanTime","spanEnterLen","blockLeaveLen","spanOpacity","from","to","activeSpan","loadedSpans","concat","GetNextSpanWithStart","slice","reduce","prev","wordsTo","startingWordsTo","i","timeTo","blocksTo","spansTo","songEnd","timeForEachType","GetTransitionTimes","timeForSpans","Math","max","wordCount","spanBudget","GetSpanTime","this","loadAudioElement","a","Promise","resolve","reject","element","createElement","url","URL","createObjectURL","src","addEventListener","removeEventListener","err","fromEditor","automaticMode","timestamps","draftBlocks","getBlocksAsArray","FromEditor","readerBlocks","draftBlock","getKey","getText","positions","entityRanges","find","timestamp","spanTexts","position","audioElement","EditPage","isAudioModalVisible","setAudioModalVisible","isAutomaticMode","setAutomaticMode","setAudio","textEditRef","audioEditRef","setTimestamps","handleAddAnchor","handleRemoveAnchor","t","newTimestamps","splice","useAudioMarkers","animationPlayState","checked","marginRight","readerData","onWatch","alert","track","defaults","currentState","setPropertyMap","getEventsSinceLastTick","last","regions","isWithinRegion","interpolateState","progress","GetEventsSinceLastTick","InterpolateState","v","f","local","min","localNormalized","eased","easeCubic","atEnd","animProp","fromPrev","interpolate","isPropertyAlreadySet","markPropertySet","safePropertyEntry","regionId","propertyKey","Construct","manager","interval","queued","setQueued","lastTick","setLastTick","hasStarted","setHasStarted","onTick","defaultState","playing","intervalProp","onRegion","onEnded","Tick","newValue","NewTimelineManager","UpdateInterval","intervalRef","clearInterval","intervalLen","setInterval","q","ValueUpdated","elements","setElements","useMemo","HandleRegionEvent","join","ViewPage","setPlayhead","didFinish","setDidFinish","handlePlayPause","pause","play","App","currentPage","EDIT","route","setRoute","setReaderData","VIEW","Boolean","window","location","hostname","match","library","add","faPlusCircle","faUpload","faSpinner","faPlay","faPause","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.57e66e3a.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\n\nexport enum EntityType {\n  ANCHOR = \"Anchor\"\n}\n\nexport enum Color {\n  PRIMARY = \"#375a7f\",\n  PRIMARY_SAT_10 = \"#405a76\",\n  TURQUOISE = \"#1abc9c\",\n  GRAY = \"#8c9b9d\"\n}\n\nexport enum Route {\n  EDIT = \"edit\",\n  VIEW = \"view\"\n}\n\nexport enum ReaderEventType {\n  READER_START = \"Reader Start\",\n  BLOCK_ENTER = \"Block Enter\",\n  SPAN_WILL_ENTER = \"Span Will Enter\",\n  SPAN_ENTER = \"Span Enter\",\n  BLOCK_WILL_LEAVE = \"Block Will Leave\",\n  BLOCK_LEAVE = \"Block Leave\"\n}\n\nexport enum Key {\n  PERIOD = 190\n}\n\nexport enum KeybindEvent {\n  INSERT_ANCHOR = \"Insert Anchor\"\n}\n","export const ENTER_FADE_DURATION = 1000;\nexport const LEAVE_FADE_DURATION = 1000;\n\nexport const WORDS_PER_MINUTE = 200;\nexport const MIN_BLOCK_DURATION = 2000;\n\nexport const TEXT_VIEWPORT_HEIGHT = 400;\n\nexport const ANCHOR_SEP = \"■\";\n","import React from \"react\";\nimport { CompositeDecorator, ContentBlock, ContentState } from \"draft-js\";\nimport { EntityType } from \"../../common/enum\";\nimport { AnchorContext } from \"./edit.context\";\n\nconst getEntityStrategy = (type: EntityType) => (\n  contentBlock: ContentBlock,\n  callback: (start: number, end: number) => void,\n  contentState: ContentState\n) => {\n  contentBlock.findEntityRanges(char => {\n    const entityKey = char.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n    return contentState.getEntity(entityKey).getType() === type;\n  }, callback);\n};\n\nexport interface IAnchorSpanProps {\n  contentState: ContentState;\n  entityKey: string;\n}\n\nconst AnchorSpan: React.FC<IAnchorSpanProps> = props => {\n  const { id: anchorId }: { id: string } = props.contentState\n    .getEntity(props.entityKey)\n    .getData();\n\n  const anchors = React.useContext(AnchorContext);\n  const idx = anchors.findIndex(anchor => anchor === anchorId);\n\n  return (\n    <span key={anchorId} className=\"AnchorSpan\">\n      {anchorId}\n    </span>\n  );\n};\n\nexport const decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy(EntityType.ANCHOR),\n    component: AnchorSpan\n  }\n]);\n","export enum LogConfig {\n  ReaderData = \"ReaderData\",\n  AnimatedReader = \"AnimatedReader\",\n  Timeline = \"Timeline\",\n  TimelineManager = \"TimelineManager\",\n  AnchorBlock = \"AnchorBlock\"\n}\n\nconst SUPPRESS: LogConfig[] = [\n  //\n  LogConfig.ReaderData,\n  LogConfig.AnimatedReader,\n  LogConfig.Timeline,\n  LogConfig.TimelineManager\n];\n\nconst createLogger = <S extends string>(module: LogConfig) => {\n  const noop = () => {};\n  const logFn = (nativeFn: (...d: any[]) => void, deepCopy = true) => (\n    scope?: S,\n    ...data: any[]\n  ) =>\n    nativeFn(\n      `${module}::${scope || \"enter\"}`,\n      ...(deepCopy\n        ? data.map(d =>\n            typeof d === \"object\" ? JSON.parse(JSON.stringify(d)) : d\n          )\n        : data)\n    );\n\n  const suppressed = SUPPRESS.includes(module);\n\n  return {\n    log: suppressed ? noop : logFn(console.log),\n    logNoCopy: suppressed ? noop : logFn(console.log, false),\n    error: logFn(console.error)\n  };\n};\n\nexport enum ReaderDataLogConfig {\n  AssembleEvents = \"AssembleEvents\",\n  GetNextSpanWithStart = \"GetNextSpanWithStart\",\n  GetSpanTime = \"GetSpanTime\",\n  GetTransitionTimes = \"GetTransitionTimes\",\n  FromEditor = \"FromEditor\"\n}\n\nexport enum AnimatedReaderLogConfig {\n  HandleRegionEvent = \"handleRegionEvent\"\n}\n\nexport enum TimelineLogConfig {\n  NewTimelineManager = \"NewTimelineManagerEffect\",\n  UpdateInterval = \"UpdateIntervalEffect\",\n  Tick = \"TickEffect\",\n  ValueUpdated = \"ValueUpdatedEffect\"\n}\n\nexport enum TimelineManagerLogConfig {\n  Construct = \"Construct\",\n  GetEventsSinceLastTick = \"GetEventsSinceLastTick\",\n  InterpolateState = \"InterpolateState\"\n}\n\nexport default createLogger;\n","import React from \"react\";\nimport { EditorState, Modifier, convertToRaw } from \"draft-js\";\nimport { EntityType } from \"../../common/enum\";\nimport { Timestamp } from \"./edit.types\";\nimport { IAudioEditRef } from \"./AudioEdit\";\nimport { ANCHOR_SEP } from \"../../common/constants\";\n\nexport const useAnchorModifiers = (\n  setEditorState: (es: EditorState) => void,\n  canSetAnchors: boolean,\n  setError: (message: string) => void,\n  onAddAnchor: (id: string) => void,\n  onRemoveAnchor: (id: string) => void\n) => {\n  const [anchors, setAnchors] = React.useState<string[]>([]);\n  const [lastAnchorId, setLastAnchorId] = React.useState(0);\n\n  const addAnchor = (newAnchor: string) => {\n    onAddAnchor(newAnchor);\n    setAnchors([...anchors, newAnchor]);\n  };\n\n  const placeAnchor = (editorState: EditorState) => {\n    if (!canSetAnchors) {\n      setError(\n        \"Can't place an anchor yet. Did you upload audio and switch out of manual mode?\"\n      );\n      return;\n    }\n\n    setLastAnchorId(lastAnchorId + 1);\n    const anchorId = `${lastAnchorId + 1}`;\n\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      EntityType.ANCHOR,\n      \"IMMUTABLE\",\n      { id: anchorId }\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n    const initSelectionState = editorState.getSelection();\n    if (\n      initSelectionState.getStartOffset() !== initSelectionState.getEndOffset()\n    ) {\n      setError(\"You can't have anything highlighted when you add an anchor.\");\n      return;\n    }\n\n    const contentStateWithAnchor = Modifier.insertText(\n      contentStateWithEntity,\n      initSelectionState,\n      ANCHOR_SEP,\n      undefined,\n      entityKey\n    );\n\n    const newEditorState = EditorState.push(\n      editorState,\n      contentStateWithAnchor,\n      \"insert-characters\"\n    );\n\n    setEditorState(newEditorState);\n    addAnchor(anchorId);\n  };\n\n  const getAllAnchors = (editorState: EditorState) => {\n    const contentState = editorState.getCurrentContent();\n    const { entityMap } = convertToRaw(contentState);\n    const anchors = Object.values(entityMap)\n      .filter(entity => entity.type === EntityType.ANCHOR)\n      .map(entity => entity.data.id);\n    return anchors;\n  };\n\n  const checkForDeletedAnchors = (\n    oldState: EditorState,\n    newState: EditorState\n  ) => {\n    const oldAnchors = getAllAnchors(oldState);\n    const newAnchors = getAllAnchors(newState);\n\n    if (newAnchors.length < oldAnchors.length) {\n      setAnchors(newAnchors);\n\n      for (let oldAnchor of oldAnchors) {\n        if (!newAnchors.includes(oldAnchor)) {\n          onRemoveAnchor(oldAnchor);\n        }\n      }\n    }\n  };\n\n  return { placeAnchor, anchors, checkForDeletedAnchors };\n};\n\nexport const useAudioMarkers = (\n  audioEditRef: React.RefObject<IAudioEditRef>\n) => {\n  const [timestamps, setTimestamps] = React.useState<Timestamp[]>([]);\n\n  const handleAddAnchor = (anchorId: string) => {\n    if (audioEditRef.current === null) {\n      return;\n    }\n\n    const region = audioEditRef.current.addAnchor(anchorId)!;\n    const timestamp: Timestamp = {\n      anchorId,\n      region,\n      position: region.start\n    };\n    setTimestamps([...timestamps, timestamp]);\n  };\n\n  const handleRemoveAnchor = (anchorId: string) => {\n    if (audioEditRef.current === null) {\n      return;\n    }\n\n    const timestamp = timestamps.findIndex(t => t.anchorId === anchorId);\n    audioEditRef.current.removeAnchor(timestamps[timestamp].region);\n\n    const newTimestamps = [...timestamps];\n    newTimestamps.splice(timestamp, 1);\n    setTimestamps(newTimestamps);\n  };\n\n  return { handleAddAnchor, handleRemoveAnchor, timestamps };\n};\n","import React from \"react\";\n\nexport const AnchorContext = React.createContext<string[]>([]);\n","import React from \"react\";\n\nexport interface ICardModalProps {\n  title: string;\n  visible: boolean;\n  onClose: () => void;\n  onSubmit?: () => void;\n  submitDisabled?: boolean;\n  notifyOnly?: boolean;\n}\n\nconst CardModal: React.FC<ICardModalProps> = props => {\n  if (!props.visible) {\n    return <div />;\n  }\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={props.onClose} />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{props.title}</p>\n          <button\n            className=\"delete\"\n            aria-label=\"close\"\n            onClick={props.onClose}\n          />\n        </header>\n        <section className=\"modal-card-body\">{props.children}</section>\n        <footer className=\"modal-card-foot\">\n          {props.notifyOnly ? (\n            <button className=\"button\" onClick={props.onClose}>\n              Okay\n            </button>\n          ) : (\n            <>\n              <button\n                className=\"button is-success\"\n                onClick={!props.submitDisabled ? props.onSubmit : () => {}}\n                disabled={!!props.submitDisabled}\n              >\n                Submit\n              </button>\n              <button className=\"button\" onClick={props.onClose}>\n                Cancel\n              </button>\n            </>\n          )}\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default CardModal;\n","import React from \"react\";\nimport CardModal from \"../../common/CardModal\";\n\nexport interface IErrorModalProps {\n  message: string | null;\n  onClose: () => void;\n}\n\nconst ErrorModal: React.FC<IErrorModalProps> = props => {\n  if (props.message === null) {\n    return null;\n  }\n  return (\n    <CardModal title=\"Error\" visible onClose={props.onClose} notifyOnly>\n      {props.message}\n    </CardModal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport {\n  Editor,\n  EditorState,\n  ContentState,\n  KeyBindingUtil,\n  getDefaultKeyBinding,\n  DraftHandleValue\n} from \"draft-js\";\nimport { useAnchorModifiers } from \"./edit.hooks\";\nimport { Key, KeybindEvent } from \"../../common/enum\";\nimport { decorator } from \"./AnchorSpan\";\nimport { AnchorContext } from \"./edit.context\";\nimport ErrorModal from \"./ErrorModal\";\n\nexport interface TextEditProps {\n  canSetAnchors: boolean;\n  onAddAnchor: (id: string) => void;\n  onRemoveAnchor: (id: string) => void;\n}\n\nexport interface TextEditRef {\n  getContentState: () => ContentState;\n}\n\nconst keyBindingFn = (e: any) => {\n  if (e.keyCode == Key.PERIOD && KeyBindingUtil.isCtrlKeyCommand(e)) {\n    return KeybindEvent.INSERT_ANCHOR;\n  }\n  return getDefaultKeyBinding(e);\n};\n\nconst TextEdit = React.forwardRef<TextEditRef, TextEditProps>(function TextEdit(\n  props,\n  ref\n) {\n  const { canSetAnchors, onAddAnchor, onRemoveAnchor } = props;\n  const [editorState, setEditorState] = React.useState(\n    EditorState.createWithContent(\n      ContentState.createFromText(\"Start writing your next masterpiece...\"),\n      decorator\n    )\n  );\n  const [error, setError] = React.useState<string | null>(null);\n\n  const { placeAnchor, anchors, checkForDeletedAnchors } = useAnchorModifiers(\n    setEditorState,\n    canSetAnchors,\n    setError,\n    onAddAnchor,\n    onRemoveAnchor\n  );\n\n  React.useImperativeHandle<TextEditRef, TextEditRef>(ref, () => ({\n    getContentState: () => editorState.getCurrentContent()\n  }));\n\n  const handleKeyCommand = (command: string): DraftHandleValue => {\n    if (command === KeybindEvent.INSERT_ANCHOR) {\n      placeAnchor(editorState);\n      return \"handled\";\n    }\n    return \"not-handled\";\n  };\n\n  const handleEditorChange = (newState: EditorState) => {\n    checkForDeletedAnchors(editorState, newState);\n    setEditorState(newState);\n  };\n\n  return (\n    <AnchorContext.Provider value={anchors}>\n      <div className=\"TextEdit\">\n        <Editor\n          editorState={editorState}\n          onChange={handleEditorChange}\n          keyBindingFn={keyBindingFn}\n          handleKeyCommand={handleKeyCommand}\n        />\n      </div>\n      <ErrorModal message={error} onClose={() => setError(null)} />\n    </AnchorContext.Provider>\n  );\n});\n\nexport default TextEdit;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport interface ILoadableProps {\n  isLoading: boolean;\n}\n\nconst Loadable: React.FC<ILoadableProps> = props => {\n  if (!props.isLoading) {\n    return <>{props.children}</>;\n  }\n\n  return (\n    <div className=\"Loadable\">\n      <FontAwesomeIcon icon=\"spinner\" pulse size=\"3x\" opacity={0.5} />\n      <div style={{ display: \"none\" }}>{props.children}</div>\n    </div>\n  );\n};\n\nexport default Loadable;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport interface IAudioControlsProps {\n  isPlaying: boolean;\n  onPlayPause: () => void;\n}\n\nconst AudioControls: React.FC<IAudioControlsProps> = props => {\n  return (\n    <div className=\"AudioControls\">\n      <button className=\"BlankButton\" onClick={props.onPlayPause}>\n        <FontAwesomeIcon icon={props.isPlaying ? \"pause\" : \"play\"} size=\"4x\" />\n      </button>\n    </div>\n  );\n};\n\nexport default AudioControls;\n","import React from \"react\";\n\nexport interface IRegionElementAnnotationProps {\n  anchorId: string;\n}\n\nconst RegionElementAnnotation: React.FC<IRegionElementAnnotationProps> = props => {\n  return <div className=\"RegionElementAnnotation\">{props.anchorId}</div>;\n};\n\nexport default RegionElementAnnotation;\n","import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WaveSurfer from \"wavesurfer.js\";\n// @ts-ignore\nimport RegionsPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.regions\";\nimport { Color } from \"../../common/enum\";\nimport Loadable from \"../../common/Loadable\";\nimport AudioControls from \"../../common/AudioControls\";\nimport { Region } from \"./edit.types\";\nimport RegionElementAnnotation from \"./RegionElementAnnotation\";\n\nexport interface IAudioEditProps {\n  audio: File;\n  onError: () => void;\n}\n\nexport interface IAudioEditRef {\n  addAnchor: (anchorId: string) => Region | null;\n  removeAnchor: (region: Region) => void;\n}\n\nconst AudioEdit = React.forwardRef<IAudioEditRef, IAudioEditProps>(\n  function AudioEdit(props, ref) {\n    const [isLoaded, setIsLoaded] = React.useState(false);\n    const [isPlaying, setIsPlaying] = React.useState(false);\n    const [zoom, setZoom] = React.useState(100);\n\n    let surfer = React.useRef<WaveSurfer>();\n\n    useEffect(() => {\n      const ws = WaveSurfer.create({\n        container: \"#AudioEditWaveform\",\n        waveColor: Color.PRIMARY,\n        progressColor: Color.TURQUOISE,\n        cursorColor: Color.GRAY,\n        barWidth: 3,\n        barRadius: 3,\n        cursorWidth: 1,\n        height: 200,\n        barGap: 3,\n        plugins: [RegionsPlugin.create({})]\n      });\n\n      ws.loadBlob(props.audio);\n      ws.on(\"ready\", () => {\n        setIsLoaded(true);\n        ws.zoom(100);\n      });\n      ws.on(\"finish\", () => setIsPlaying(false));\n      ws.on(\"error\", () => props.onError());\n\n      ws.on(\"region-created\", (evRegion: Region) => {\n        const regionElement = document.querySelectorAll(\n          `[data-id='${evRegion.id}']`\n        )[0];\n\n        ReactDOM.render(\n          <RegionElementAnnotation anchorId={evRegion.id} />,\n          regionElement\n        );\n      });\n\n      surfer.current = ws;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.audio]);\n\n    React.useImperativeHandle<IAudioEditRef, IAudioEditRef>(ref, () => ({\n      addAnchor: (anchorId: string) => {\n        if (!surfer.current) {\n          return null;\n        }\n        const playhead = surfer.current.getCurrentTime();\n\n        const region = surfer.current.addRegion({\n          id: anchorId,\n          drag: false,\n          resize: false,\n          start: playhead,\n          end: playhead + 0.03,\n          color: \"white\"\n        });\n\n        return region as Region;\n      },\n      removeAnchor: (region: Region) => {\n        region.remove();\n      }\n    }));\n\n    return (\n      <div>\n        <div id=\"AudioEditWaveform\" />\n        <Loadable isLoading={!isLoaded}>\n          <AudioControls\n            isPlaying={isPlaying}\n            onPlayPause={() => {\n              surfer.current?.playPause();\n              setIsPlaying(!isPlaying);\n            }}\n          />\n        </Loadable>\n      </div>\n    );\n  }\n);\n\nexport default AudioEdit;\n","import { ReaderEventType } from \"./enum\";\nimport { ENTER_FADE_DURATION, LEAVE_FADE_DURATION } from \"./constants\";\nimport { Timestamp } from \"../pages/edit/edit.types\";\nimport { ISpan } from \"./common.types\";\nimport { ContentBlock } from \"draft-js\";\n\nconst KILOBYTE = 1000;\nconst MEGABYTE = KILOBYTE * 1000;\nconst GIGABYTE = MEGABYTE * 1000;\n\nexport const formatByteDisplay = (numBytes: number) => {\n  let rawCount = numBytes;\n  let prefix = \"B\";\n\n  if (numBytes === 0) {\n  } else if (numBytes >= GIGABYTE) {\n    rawCount = numBytes / GIGABYTE;\n    prefix = \"GB\";\n  } else if (numBytes >= MEGABYTE) {\n    rawCount = numBytes / MEGABYTE;\n    prefix = \"MB\";\n  } else if (numBytes >= KILOBYTE) {\n    rawCount = numBytes / KILOBYTE;\n    prefix = \"KB\";\n  }\n\n  return `${Number(rawCount.toFixed(2))} ${prefix}`;\n};\n\nexport const getTransitionLength = (event: ReaderEventType) => {\n  switch (event) {\n    case ReaderEventType.SPAN_WILL_ENTER:\n      return ENTER_FADE_DURATION;\n    case ReaderEventType.BLOCK_WILL_LEAVE:\n      return LEAVE_FADE_DURATION;\n    case ReaderEventType.BLOCK_ENTER:\n    case ReaderEventType.SPAN_ENTER:\n    case ReaderEventType.BLOCK_LEAVE:\n    default:\n      return 0;\n  }\n};\n\nexport const getWordCount = (text: string) => text.split(\" \").length;\n\nconst PUNC = [\".\", \"?\", \"!\", \",\"];\nexport const splitParagraph = (blockId: string, text: string): ISpan[] => {\n  let spans = [text];\n  for (let punc of PUNC) {\n    const tempSpans: string[] = [];\n    spans.forEach(span => {\n      tempSpans.push(\n        ...span\n          .split(punc)\n          .filter(s => s.trim().length)\n          .map((s, sIdx, arr) => s + (sIdx < arr.length - 1 ? punc : \"\"))\n      );\n\n      if (span.endsWith(punc)) {\n        tempSpans[tempSpans.length - 1] += punc;\n      }\n    });\n    spans = tempSpans;\n  }\n  return spans.map((span, spanIdx) => ({\n    id: `${blockId}_$${spanIdx}`,\n    text: span\n  }));\n};\n\n// export const anchorSplit = (\n//   block: ContentBlock,\n//   timestamps: Timestamp[]\n// ): ISpan[] => {\n\n//   return [];\n// };\n\nexport const newId = () => {\n  const str = Math.random().toString(36);\n  return `_${str.substr(2, 8)}`;\n};\n","import React from \"react\";\nimport moment from \"moment\";\nimport CardModal from \"../common/CardModal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { formatByteDisplay } from \"../common/utils\";\n\nexport interface IUploadAudioModalProps {\n  visible: boolean;\n  onClose: () => void;\n  onSubmit: (file: File) => void;\n}\n\nconst UploadAudioModal: React.FC<IUploadAudioModalProps> = props => {\n  const [audioFile, setAudioFile] = React.useState<File>();\n\n  return (\n    <CardModal\n      title=\"Upload Audio\"\n      visible={props.visible}\n      onClose={props.onClose}\n      onSubmit={() => audioFile && props.onSubmit(audioFile)}\n    >\n      <div className=\"UploadAudioModalFileInput\">\n        <div className=\"file is-boxed\">\n          <label className=\"file-label\">\n            <input\n              className=\"file-input\"\n              type=\"file\"\n              name=\"audio\"\n              onChange={event => {\n                const file = event.target.files![0];\n                if (file) {\n                  setAudioFile(file);\n                }\n              }}\n            />\n            <span className=\"file-cta\">\n              <span className=\"file-icon\">\n                <FontAwesomeIcon icon=\"upload\" />\n              </span>\n              <span className=\"file-label\">Choose a file</span>\n            </span>\n          </label>\n        </div>\n        {audioFile && (\n          <div className=\"UploadAudioModalFileInputData\">\n            {audioFile.name}\n            <br />\n            <strong>Last Modified: </strong>\n            {moment(audioFile.lastModified).format(\"MMMM Do YYYY, h:mm a\")}\n            <br />\n            <strong>Size: </strong>\n            {formatByteDisplay(audioFile.size)}\n          </div>\n        )}\n      </div>\n    </CardModal>\n  );\n};\n\nexport default UploadAudioModal;\n","import React from \"react\";\n\nexport interface IFullPageProps {\n  header?: JSX.Element;\n}\n\nconst FullPage: React.FC<IFullPageProps> = props => {\n  return (\n    <section className=\"hero is-fullheight\">\n      {props.header && <div className=\"hero-head\">{props.header}</div>}\n      <div className=\"hero-body\">\n        <div className=\"container\">{props.children}</div>\n      </div>\n    </section>\n  );\n};\n\nexport default FullPage;\n","import Draft, { ContentBlock, convertToRaw } from \"draft-js\";\nimport { ReaderEventType } from \"./enum\";\nimport { getTransitionLength, getWordCount, splitParagraph } from \"./utils\";\nimport logger, { ReaderDataLogConfig as LC, LogConfig } from \"./logger\";\nimport { IRegionState, ITrackRegion } from \"../intime/intime.types\";\nimport { Timestamp } from \"../pages/edit/edit.types\";\nimport { ANCHOR_SEP } from \"./constants\";\n\nconst LOG = logger<LC>(LogConfig.ReaderData);\n\nexport interface IAudioFile {\n  file: File;\n  /** in milliseconds */\n  length: number;\n  element: HTMLAudioElement;\n}\n\nexport interface IBlock {\n  id: string;\n  spans: ISpan[];\n}\n\nexport interface ISpan {\n  id: string;\n  text: string;\n  start?: number;\n}\n\nexport interface IReaderRegionData {\n  type: ReaderEventType;\n  block: IBlock;\n  span?: ISpan;\n}\n\nexport interface IReaderRegionState {\n  blockOpacity: number;\n  spanOpacity: number;\n  loadedSpans: ISpan[];\n  activeSpan: ISpan | null;\n}\n\nexport type IReaderRegion = ITrackRegion<IReaderRegionData, IReaderRegionState>;\n\ninterface ITrackingSpan {\n  span: ISpan;\n  wordsTo: number;\n  timeTo: number;\n  spansTo: number;\n  blocksTo: number;\n}\n\nexport class ReaderData {\n  blocks: IBlock[];\n  events: IReaderRegion[];\n  audio: IAudioFile;\n\n  constructor(blocks: IBlock[], audio: IAudioFile) {\n    this.blocks = blocks;\n    this.audio = audio;\n    this.events = this.assembleEvents(blocks);\n  }\n\n  private assembleEvents = (blocks: IBlock[]): IReaderRegion[] => {\n    LOG.log(LC.AssembleEvents, \"start\", { blocks });\n\n    const events: IReaderRegion[] = [];\n\n    const defaultSpanEnterLen = getTransitionLength(\n      ReaderEventType.SPAN_WILL_ENTER\n    );\n    const defaultBlockLeaveLen = getTransitionLength(\n      ReaderEventType.BLOCK_WILL_LEAVE\n    );\n\n    let currentTime = 0;\n    let index = 0;\n\n    const _pushEvent = (\n      type: ReaderEventType,\n      duration: number,\n      state: IRegionState<IReaderRegionState>,\n      block: IBlock,\n      span?: ISpan\n    ) => {\n      LOG.log(LC.AssembleEvents, \"_pushEvent\", {\n        type,\n        currentTime,\n        duration,\n        block,\n        span\n      });\n\n      events.push({\n        id: `${index++}`,\n        start: currentTime,\n        end: currentTime + duration,\n        duration,\n        data: {\n          type,\n          block,\n          span\n        },\n        state\n      });\n      currentTime += duration;\n    };\n\n    const firstSpan = blocks[0] && blocks[0].spans[0];\n    const startDelay = (firstSpan && firstSpan.start) || 0;\n\n    _pushEvent(ReaderEventType.READER_START, startDelay, {}, blocks[0]);\n\n    let nextSpanWithStart = this.getNextSpanWithStart(\n      blocks,\n      0,\n      0,\n      currentTime\n    );\n\n    let transitionTimes = this.getTransitionTimes(\n      nextSpanWithStart,\n      defaultSpanEnterLen,\n      defaultBlockLeaveLen\n    );\n\n    LOG.log(LC.AssembleEvents, \"before iteration\", {\n      currentTime,\n      nextSpanWithStart\n    });\n\n    blocks.forEach((block, blockIdx) => {\n      _pushEvent(\n        ReaderEventType.BLOCK_ENTER,\n        0,\n        {\n          blockOpacity: { set: 1 }\n        },\n        block\n      );\n\n      block.spans.forEach((span, spanIdx) => {\n        if (nextSpanWithStart.span.id === span.id) {\n          nextSpanWithStart = this.getNextSpanWithStart(\n            blocks,\n            blockIdx,\n            spanIdx,\n            currentTime\n          );\n\n          transitionTimes = this.getTransitionTimes(\n            nextSpanWithStart,\n            defaultSpanEnterLen,\n            defaultBlockLeaveLen\n          );\n\n          LOG.log(LC.AssembleEvents, \"resetting tracking span\", {\n            block,\n            span,\n            currentTime,\n            nextSpanWithStart,\n            transitionTimes\n          });\n        }\n\n        const spanTime = this.getSpanTime(\n          span,\n          nextSpanWithStart,\n          transitionTimes.spanEnterLen,\n          transitionTimes.blockLeaveLen\n        );\n\n        _pushEvent(\n          ReaderEventType.SPAN_WILL_ENTER,\n          transitionTimes.spanEnterLen,\n          {\n            spanOpacity: { from: 0, to: 1 },\n            activeSpan: { set: span }\n          },\n          block,\n          span\n        );\n        _pushEvent(\n          ReaderEventType.SPAN_ENTER,\n          spanTime,\n          {\n            activeSpan: { set: null },\n            loadedSpans: {\n              set: spans => spans.concat(span)\n            }\n          },\n          block,\n          span\n        );\n      });\n\n      _pushEvent(\n        ReaderEventType.BLOCK_WILL_LEAVE,\n        transitionTimes.blockLeaveLen,\n        {\n          blockOpacity: { from: 1, to: 0 }\n        },\n        block\n      );\n      _pushEvent(\n        ReaderEventType.BLOCK_LEAVE,\n        0,\n        { loadedSpans: { set: [] } },\n        block\n      );\n    });\n\n    return events;\n  };\n\n  private getNextSpanWithStart = (\n    blocks: IBlock[],\n    blockIdx: number,\n    spanIdx: number,\n    currentTime: number\n  ): ITrackingSpan => {\n    LOG.log(LC.GetNextSpanWithStart, \"start\", {\n      blocks,\n      blockIdx,\n      spanIdx,\n      currentTime\n    });\n\n    const wholeBlocksLeft = blocks.slice(blockIdx + 1);\n    let spans = wholeBlocksLeft.reduce<Array<ISpan & { blockIdx: number }>>(\n      (prev, current, index) =>\n        prev.concat(\n          current.spans.map(span => ({\n            ...span,\n            blockIdx: blockIdx + index + 1\n          }))\n        ),\n      []\n    );\n    spans = blocks[blockIdx].spans\n      .slice(spanIdx + 1)\n      .map(span => ({ ...span, blockIdx }))\n      .concat(spans);\n\n    let wordsTo = getWordCount(blocks[blockIdx].spans[spanIdx].text);\n\n    LOG.log(LC.GetNextSpanWithStart, \"before iter\", {\n      spans,\n      startingWordsTo: wordsTo\n    });\n\n    for (let i = 0; i < spans.length; i++) {\n      const span = spans[i];\n      if (span.start) {\n        return {\n          span,\n          wordsTo,\n          timeTo: span.start - currentTime,\n          blocksTo: span.blockIdx - blockIdx,\n          spansTo: i + 1\n        };\n      } else {\n        wordsTo += getWordCount(span.text);\n      }\n    }\n\n    const songEnd: ISpan = {\n      id: \"song_end\",\n      text: \"\",\n      start: this.audio.length\n    };\n    return {\n      span: songEnd,\n      wordsTo,\n      timeTo: songEnd.start! - currentTime,\n      blocksTo: blocks.length - blockIdx,\n      spansTo: spans.length + 1\n    };\n  };\n\n  private getTransitionTimes = (\n    nextSpanWithStart: ITrackingSpan,\n    defaultSpanEnterLen: number,\n    defaultBlockLeaveLen: number\n  ): { spanEnterLen: number; blockLeaveLen: number } => {\n    const { spansTo, blocksTo, timeTo } = nextSpanWithStart;\n\n    let spanEnterLen = defaultSpanEnterLen;\n    let blockLeaveLen = defaultBlockLeaveLen;\n\n    const totalSpanEnterTime = defaultSpanEnterLen * spansTo;\n    const totalBlockLeaveTime = defaultBlockLeaveLen * blocksTo;\n\n    const transitionsTooLong =\n      totalSpanEnterTime + totalBlockLeaveTime > timeTo;\n\n    if (transitionsTooLong) {\n      const timeForEachType = timeTo * 0.5;\n      spanEnterLen = timeForEachType / spansTo; // spansTo >= 1\n      blockLeaveLen = blocksTo ? timeForEachType / blocksTo : 0; // blocksTo >= 0\n    }\n\n    LOG.log(LC.GetTransitionTimes, { spanEnterLen, blockLeaveLen });\n\n    return { spanEnterLen, blockLeaveLen };\n  };\n\n  private getSpanTime = (\n    span: ISpan,\n    nextSpanWithStart: ITrackingSpan,\n    spanEnterLen: number,\n    blockLeaveLen: number\n  ) => {\n    const { timeTo, wordsTo, spansTo, blocksTo } = nextSpanWithStart;\n    const timeForSpans = Math.max(\n      timeTo - spanEnterLen * spansTo - blockLeaveLen * blocksTo,\n      0\n    );\n\n    const wordCount = getWordCount(span.text);\n    const spanBudget = wordCount ? wordsTo / wordCount : 0;\n    const spanTime = spanBudget\n      ? Number(((1 / spanBudget) * timeForSpans).toFixed(1))\n      : 0;\n\n    LOG.log(LC.GetSpanTime, \"calculated\", {\n      span,\n      nextSpanWithStart,\n      spanEnterLen,\n      blockLeaveLen,\n      wordCount,\n      spanBudget,\n      timeForSpans,\n      spanTime\n    });\n\n    return spanTime;\n  };\n\n  public static loadAudioElement = async (file: File): Promise<IAudioFile> => {\n    return new Promise((resolve, reject) => {\n      try {\n        const element = document.createElement(\"audio\");\n        const url = URL.createObjectURL(file);\n        element.src = url;\n\n        const callback = () => {\n          element.removeEventListener(\"loadedmetadata\", callback);\n          resolve({ file, element, length: element.duration * 1000 });\n        };\n\n        element.addEventListener(\"loadedmetadata\", callback);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  };\n\n  public static fromEditor = async (\n    contentState: Draft.ContentState,\n    audio: File,\n    automaticMode: boolean,\n    timestamps: Timestamp[]\n  ): Promise<ReaderData> => {\n    const draftBlocks = contentState.getBlocksAsArray();\n    LOG.log(LC.FromEditor, { draftBlocks });\n\n    let readerBlocks: IBlock[] = [];\n\n    if (!automaticMode) {\n      const { entityMap, blocks } = convertToRaw(contentState);\n\n      blocks.forEach(block => {\n        const entityKeys = block.entityRanges.map(e => e.key);\n        const entities = entityKeys.map(key => entityMap[key]);\n        const positions = entities.map(entity =>\n          timestamps.find(timestamp => timestamp.anchorId === entity.data.id)\n        );\n\n        const spanTexts = block.text.split(ANCHOR_SEP);\n        console.log(positions, spanTexts);\n        const spans: ISpan[] = [];\n        if (spanTexts.length > 0) {\n          spans.push({ id: block.key + \"_0\", text: spanTexts[0] });\n          positions.forEach((position, index) => {\n            spans.push({\n              id: `${block.key}_${index + 1}`,\n              text: spanTexts[index + 1],\n              start: position!.position * 1000\n            });\n          });\n        }\n\n        readerBlocks.push({\n          id: block.key,\n          spans\n        });\n      });\n    } else {\n      readerBlocks = draftBlocks.map(draftBlock => ({\n        id: draftBlock.getKey(),\n        spans: splitParagraph(draftBlock.getKey(), draftBlock.getText())\n      }));\n    }\n\n    const audioElement = await ReaderData.loadAudioElement(audio);\n    return new ReaderData(readerBlocks, audioElement);\n  };\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextEdit, { TextEditRef } from \"./TextEdit\";\nimport AudioEdit, { IAudioEditRef } from \"./AudioEdit\";\nimport UploadAudioModal from \"../UploadAudioModal\";\nimport FullPage from \"../../common/FullPage\";\nimport { ReaderData } from \"../../common/common.types\";\nimport { useAudioMarkers } from \"./edit.hooks\";\nimport ErrorModal from \"./ErrorModal\";\n\nexport interface IEditPageProps {\n  onWatch: (readerData: ReaderData) => void;\n}\n\nconst EditPage: React.FC<IEditPageProps> = props => {\n  const [isAudioModalVisible, setAudioModalVisible] = React.useState(false);\n  const [isAutomaticMode, setAutomaticMode] = React.useState(true);\n  const [error, setError] = React.useState<string | null>(null);\n  const [audio, setAudio] = React.useState<File>();\n  const textEditRef = React.useRef<TextEditRef>(null);\n  const audioEditRef = React.useRef<IAudioEditRef>(null);\n  const { handleAddAnchor, handleRemoveAnchor, timestamps } = useAudioMarkers(\n    audioEditRef\n  );\n\n  return (\n    <FullPage\n      header={\n        <nav\n          className=\"navbar FadeIn\"\n          style={audio ? { animationPlayState: \"running\" } : {}}\n        >\n          <div className=\"container\">\n            <div className=\"navbar-menu\">\n              {!isAutomaticMode && (\n                <div className=\"navbar-start\">\n                  <div className=\"navbar-item NavbarText\">\n                    Press Ctrl+. to insert an anchor at your cursor.\n                  </div>\n                </div>\n              )}\n              <div className=\"navbar-end\">\n                <div className=\"navbar-item\">\n                  <div className=\"field\">\n                    <label className=\"checkbox NavButton\">\n                      <input\n                        type=\"checkbox\"\n                        checked={isAutomaticMode}\n                        onChange={() => {\n                          if (isAutomaticMode) {\n                            setAutomaticMode(false);\n                          } else {\n                            setError(\n                              \"Once you change to manual mode, you can't switch back to automatic.\"\n                            );\n                          }\n                        }}\n                        style={{ marginRight: 4 }}\n                      />\n                      Automatic Mode\n                    </label>\n                  </div>\n                </div>\n                <div className=\"navbar-item\">\n                  <button\n                    className=\"button NavButton\"\n                    onClick={async () => {\n                      const contentState = textEditRef.current?.getContentState();\n                      const readerData = await ReaderData.fromEditor(\n                        contentState!,\n                        audio!,\n                        isAutomaticMode,\n                        timestamps!\n                      );\n                      props.onWatch(readerData);\n                    }}\n                  >\n                    Watch\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav>\n      }\n    >\n      <div className=\"TextEditContainer\">\n        <TextEdit\n          ref={textEditRef}\n          canSetAnchors={audio !== undefined && !isAutomaticMode}\n          onAddAnchor={handleAddAnchor}\n          onRemoveAnchor={handleRemoveAnchor}\n        />\n      </div>\n      <div className=\"AudioEditContainer\">\n        {audio ? (\n          <AudioEdit\n            audio={audio}\n            onError={() => {\n              alert(\n                \"That file could not be processed. Please try again or upload a different file.\"\n              );\n              setAudio(undefined);\n            }}\n            ref={audioEditRef}\n          />\n        ) : (\n          <button\n            className=\"BlankButton AddAudioBtn\"\n            onClick={() => setAudioModalVisible(true)}\n          >\n            <FontAwesomeIcon icon=\"plus-circle\" size=\"6x\" />\n            <div className=\"AddAudioBtnLabel\">Click to upload audio</div>\n          </button>\n        )}\n      </div>\n      <UploadAudioModal\n        visible={isAudioModalVisible}\n        onClose={() => setAudioModalVisible(false)}\n        onSubmit={file => {\n          setAudioModalVisible(false);\n          setAudio(file);\n        }}\n      />\n      <ErrorModal message={error} onClose={() => setError(null)} />\n    </FullPage>\n  );\n};\n\nexport default EditPage;\n","import { easeCubic } from \"d3-ease\";\nimport { interpolate } from \"d3-interpolate\";\nimport { ITrackRegion, IRegionEvent } from \"./intime.types\";\nimport logger, {\n  TimelineManagerLogConfig as LC,\n  LogConfig\n} from \"../common/logger\";\n\nconst LOG = logger<LC>(LogConfig.TimelineManager);\n\ntype IInterpolateStateResult<State> = {\n  progress: number;\n  newState: State;\n};\n\ntype Interpolatable = string | number | boolean;\n\nconst isFunction = (f: any): f is (a: any) => any =>\n  f && typeof f === \"function\";\n\nconst isInterpolatable = (v: any): v is Interpolatable =>\n  v !== undefined && [\"string\", \"number\", \"boolean\"].includes(typeof v);\n\nexport class TimelineManager<Data, State extends object> {\n  public length: number;\n\n  private track: ITrackRegion<Data, State>[];\n  private currentState: State;\n\n  private setPropertyMap: { [id: string]: PropertyKey[] } = {};\n\n  constructor(track: ITrackRegion<Data, State>[], defaults: State) {\n    this.length = track[track.length - 1].end;\n\n    this.track = track; // TODO - Validation\n    this.currentState = defaults;\n\n    LOG.log(LC.Construct, { length: this.length, track, defaults });\n  }\n\n  getEventsSinceLastTick = (\n    last: number,\n    current: number\n  ): IRegionEvent<Data, State>[] => {\n    const regions = this.track.filter(region =>\n      this.isWithinRegion(region, last, current)\n    );\n    const events = regions.map<IRegionEvent<Data, State>>(region => {\n      const { progress, newState: state } = this.interpolateState(\n        region,\n        current\n      );\n      return { value: current, region, state, progress };\n    });\n\n    LOG.log(LC.GetEventsSinceLastTick, { last, current, regions, events });\n\n    return events;\n  };\n\n  private isWithinRegion = (\n    region: ITrackRegion,\n    last: number,\n    current: number\n  ) => {\n    if (region.start >= last && region.end <= current) {\n      return true;\n    }\n\n    if (region.start <= current && region.end >= current) {\n      return true;\n    }\n\n    if (region.start <= last && region.end > last) {\n      return true;\n    }\n  };\n\n  private interpolateState = (\n    region: ITrackRegion<Data, State>,\n    current: number\n  ): IInterpolateStateResult<State> => {\n    LOG.log(LC.InterpolateState, {\n      region,\n      current,\n      currentState: this.currentState\n    });\n\n    const local = Math.min(\n      Math.max(current - region.start, 0),\n      region.duration\n    );\n    const localNormalized = region.duration ? local / region.duration : 0;\n    const eased = easeCubic(localNormalized);\n    const atEnd = region.duration ? eased === 1 : true;\n\n    const newState = { ...this.currentState };\n    if (region.state) {\n      for (let key in region.state) {\n        const prev = this.currentState[key];\n        const animProp = region.state[key]!;\n        const { set, from, to } = animProp;\n\n        if (set !== undefined) {\n          if (!this.isPropertyAlreadySet(region.id, key)) {\n            this.markPropertySet(region.id, key);\n            newState[key] = isFunction(set) ? set(prev) : set;\n          }\n\n          continue;\n        }\n\n        if (to === undefined) {\n          LOG.error(LC.InterpolateState, \"from/to is not valid\", {\n            region,\n            key,\n            animProp\n          });\n          continue;\n        }\n\n        const fromPrev = from !== undefined ? from : prev;\n\n        if (!isInterpolatable(to)) {\n          newState[key] = !atEnd ? fromPrev : to;\n          continue;\n        }\n\n        newState[key] = interpolate(fromPrev, to as any)(eased);\n      }\n    }\n\n    LOG.log(LC.InterpolateState, \"after interp\", { eased, newState });\n\n    this.currentState = newState;\n    return { progress: eased, newState };\n  };\n\n  private safePropertyEntry = (regionId: string) => {\n    if (!this.setPropertyMap[regionId]) {\n      this.setPropertyMap[regionId] = [];\n    }\n    return this.setPropertyMap[regionId];\n  };\n\n  private isPropertyAlreadySet = (\n    regionId: string,\n    propertyKey: PropertyKey\n  ): boolean => {\n    return this.safePropertyEntry(regionId).includes(propertyKey);\n  };\n\n  private markPropertySet = (regionId: string, propertyKey: PropertyKey) => {\n    this.safePropertyEntry(regionId).push(propertyKey);\n  };\n}\n","import React, { PropsWithChildren, useEffect } from \"react\";\nimport { ITrackRegion, IRegionEvent, ITickEvent } from \"./intime.types\";\nimport { TimelineManager } from \"./timelineManager\";\nimport logger, { LogConfig, TimelineLogConfig as LC } from \"../common/logger\";\n\nconst LOG = logger(LogConfig.Timeline);\n\nconst DEFAULT_INTERVAL_LENGTH = 10;\n\nexport interface ITimelineProps<D, S extends object = {}> {\n  track: ITrackRegion<D, S>[];\n  defaultState: S;\n  value: number;\n  playing: boolean;\n  interval?: number;\n  onTick: (event: ITickEvent) => void;\n  onRegion: (event: IRegionEvent<D, S>) => void;\n  onEnded: () => void;\n}\n\nconst Timeline = <D, S extends object = {}>(\n  props: PropsWithChildren<ITimelineProps<D, S>>\n) => {\n  const manager = React.useRef<TimelineManager<D, S>>();\n  const interval = React.useRef<NodeJS.Timeout>();\n  const [queued, setQueued] = React.useState(0);\n  const [lastTick, setLastTick] = React.useState(0);\n  const [hasStarted, setHasStarted] = React.useState(false);\n\n  const {\n    onTick,\n    value,\n    track,\n    defaultState,\n    playing,\n    interval: intervalProp,\n    onRegion,\n    onEnded\n  } = props;\n\n  React.useEffect(() => {\n    LOG.log(LC.Tick, { value, queued });\n    if (!manager.current) {\n      return;\n    }\n\n    if (queued) {\n      setQueued(0);\n      setLastTick(value);\n\n      let newValue = value + queued;\n\n      if (newValue >= manager.current.length) {\n        newValue = manager.current.length;\n        setHasStarted(false);\n        onEnded();\n      }\n      onTick({ value: newValue });\n    }\n  }, [onTick, value, queued, onEnded]);\n\n  React.useEffect(() => {\n    LOG.log(LC.NewTimelineManager, { track, defaultState, hasStarted });\n    if (hasStarted) {\n      manager.current = new TimelineManager(track, defaultState);\n    }\n  }, [track, defaultState, hasStarted]);\n\n  React.useEffect(() => {\n    LOG.log(LC.UpdateInterval, {\n      playing,\n      intervalProp,\n      intervalRef: interval.current\n    });\n\n    if (interval.current) {\n      clearInterval(interval.current);\n      interval.current = undefined;\n    }\n    if (playing) {\n      const intervalLen = intervalProp || DEFAULT_INTERVAL_LENGTH;\n\n      interval.current = setInterval(\n        () => setQueued(q => q + intervalLen),\n        intervalLen\n      );\n      setHasStarted(true);\n    }\n  }, [playing, intervalProp]);\n\n  React.useEffect(() => {\n    LOG.log(LC.ValueUpdated, { value, lastTick });\n\n    if (!manager.current || lastTick === value) {\n      return;\n    }\n\n    setLastTick(value);\n\n    const events = manager.current.getEventsSinceLastTick(lastTick, value);\n    events.forEach(onRegion);\n  }, [onRegion, value, lastTick]);\n\n  return null;\n};\n\nexport default Timeline;\n","import React from \"react\";\nimport Timeline from \"../../intime/Timeline\";\nimport {\n  IReaderRegion,\n  IReaderRegionData,\n  IReaderRegionState\n} from \"../../common/common.types\";\nimport { ITickEvent, IRegionEvent } from \"../../intime/intime.types\";\nimport logger, {\n  AnimatedReaderLogConfig as LC,\n  LogConfig\n} from \"../../common/logger\";\n\nconst LOG = logger<LC>(LogConfig.AnimatedReader);\n\nexport interface IAnimatedReaderProps {\n  regions: IReaderRegion[];\n  isPlaying: boolean;\n  value: number;\n  onTick: (event: ITickEvent) => void;\n  onEnded: () => void;\n}\n\nconst AnimatedReader: React.FC<IAnimatedReaderProps> = props => {\n  const [elements, setElements] = React.useState<JSX.Element>();\n\n  const handleRegionEvent = (\n    event: IRegionEvent<IReaderRegionData, IReaderRegionState>\n  ) => {\n    LOG.log(LC.HandleRegionEvent, { event });\n    setElements(\n      <p style={{ opacity: event.state.blockOpacity }}>\n        {event.state.loadedSpans.map(span => span.text).join(\" \")}\n        {event.state.activeSpan && (\n          <>\n            {\" \"}\n            <span style={{ opacity: event.state.spanOpacity }}>\n              {event.state.activeSpan.text}\n            </span>\n          </>\n        )}\n      </p>\n    );\n  };\n\n  const defaultState = React.useMemo<IReaderRegionState>(\n    () => ({\n      blockOpacity: 1,\n      spanOpacity: 0,\n      loadedSpans: [],\n      activeSpan: null\n    }),\n    []\n  );\n\n  return (\n    <>\n      <Timeline<IReaderRegionData, IReaderRegionState>\n        track={props.regions}\n        defaultState={defaultState}\n        value={props.value}\n        playing={props.isPlaying}\n        onTick={props.onTick}\n        onRegion={handleRegionEvent}\n        onEnded={props.onEnded}\n      />\n      <div className=\"TextViewport\">{elements}</div>\n    </>\n  );\n};\n\nexport default AnimatedReader;\n","import React from \"react\";\nimport FullPage from \"../../common/FullPage\";\nimport { ReaderData } from \"../../common/common.types\";\nimport AnimatedReader from \"./AnimatedReader\";\nimport AudioControls from \"../../common/AudioControls\";\n\nexport interface IViewPageProps {\n  readerData?: ReaderData;\n}\n\nconst ViewPage: React.FC<IViewPageProps> = props => {\n  const { readerData } = props;\n  const [isPlaying, setIsPlaying] = React.useState(false);\n  const [playhead, setPlayhead] = React.useState(0);\n  const [didFinish, setDidFinish] = React.useState(false);\n\n  if (!readerData) {\n    return <div />;\n  }\n\n  const handlePlayPause = async () => {\n    if (isPlaying) {\n      readerData.audio.element.pause();\n    } else {\n      await readerData.audio.element.play();\n    }\n    setIsPlaying(!isPlaying);\n    if (didFinish) {\n      setPlayhead(0);\n      setDidFinish(false);\n    }\n  };\n\n  return (\n    <FullPage>\n      <AnimatedReader\n        regions={readerData.events}\n        isPlaying={isPlaying}\n        value={playhead}\n        onTick={({ value }) => setPlayhead(value)}\n        onEnded={() => {\n          setIsPlaying(false);\n          setDidFinish(true);\n        }}\n      />\n      <AudioControls isPlaying={isPlaying} onPlayPause={handlePlayPause} />\n    </FullPage>\n  );\n};\n\nexport default ViewPage;\n","import React from \"react\";\n\nimport EditPage from \"./pages/edit/EditPage\";\nimport { Route } from \"./common/enum\";\nimport FullPage from \"./common/FullPage\";\nimport ViewPage from \"./pages/view/ViewPage\";\nimport { ReaderData } from \"./common/common.types\";\n\nfunction App() {\n  const [route, setRoute] = React.useState(Route.EDIT);\n  const [readerData, setReaderData] = React.useState<ReaderData>();\n\n  let currentPage;\n  switch (route) {\n    case Route.EDIT:\n      currentPage = (\n        <EditPage\n          onWatch={(readerData: ReaderData) => {\n            setRoute(Route.VIEW);\n            setReaderData(readerData);\n          }}\n        />\n      );\n      break;\n    case Route.VIEW:\n      currentPage = <ViewPage readerData={readerData} />;\n      break;\n    default:\n      currentPage = <FullPage />;\n  }\n\n  return currentPage;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faPlusCircle,\n  faUpload,\n  faSpinner,\n  faPlay,\n  faPause\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faPlusCircle, faUpload, faSpinner, faPlay, faPause);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}